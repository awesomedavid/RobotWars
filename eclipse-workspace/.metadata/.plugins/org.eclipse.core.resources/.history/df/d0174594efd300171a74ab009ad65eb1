import org.newdawn.slick.Graphics;

public class Engine {
	public static Cell[][] cells = new Cell[v.MAP_WIDTH][v.MAP_HEIGHT];
Engine()
{
	
}
public void create() {
	for (int i = 0; i < v.MAP_WIDTH; i++) {
		for (int j = 0; j < v.MAP_HEIGHT; j++) {
			cells[i][j] = new Cell(i, j);
		}
	}
}

public void draw(Graphics g) {
	for (int i = 0; i < v.MAP_WIDTH; i++) {
		for (int j = 0; j < v.MAP_HEIGHT; j++) {
			cells[i][j].draw(g);
		}
	}
}
public boolean inBounds(int x, int y) {
	if (x >= 0 && x < v.MAP_WIDTH && y >= 0 && y < v.MAP_HEIGHT)
		return true;
	else
		return false;
}
public void update()
{
	nAlive();
	plan();
	move();
}
public void plan() {
	for (int i = 0; i < v.MAP_WIDTH; i++) {
		for (int j = 0; j < v.MAP_HEIGHT; j++) {
			if(cells[i][j].getCid() == 1 && cells[i][j].getNumAlive() < 2)
			{
				cells[i][j].setFid(0);
			}
			
		}		
		}
}
public void move() {
	for (int i = 0; i < v.MAP_WIDTH; i++) {
		for (int j = 0; j < v.MAP_HEIGHT; j++) {
			cells[i][j].setCid(cells[i][j].getFid());
			cells[i][j].setFid(cells[i][j].getCid());
		}
		}
}
public void nAlive()
{
	for (int i = 0; i < v.MAP_WIDTH; i++) {
		for (int j = 0; j < v.MAP_HEIGHT; j++) {
			if(cells[i][j].getCid() == 1) {
				if(inBounds(i-1,j-1))cells[i-1][j-1].setNumAlive(cells[i-1][j-1].getNumAlive()+1);
				if(inBounds(i,j-1))cells[i][j-1].setNumAlive(cells[i][j-1].getNumAlive()+1);
				if(inBounds(i+1,j-1))cells[i+1][j-1].setNumAlive(cells[i+1][j-1].getNumAlive()+1);
				if(inBounds(i+1,j))cells[i+1][j].setNumAlive(cells[i+1][j].getNumAlive()+1);
				if(inBounds(i+1,j+1))cells[i+1][j+1].setNumAlive(cells[i+1][j+1].getNumAlive()+1);
				if(inBounds(i,j+1))cells[i][j+1].setNumAlive(cells[i][j+1].getNumAlive()+1);
				if(inBounds(i-1,j+1))cells[i-1][j+1].setNumAlive(cells[i-1][j+1].getNumAlive()+1);
				if(inBounds(i-1,j))cells[i-1][j].setNumAlive(cells[i-1][j].getNumAlive()+1);
			}
		}		
		}
}
}
